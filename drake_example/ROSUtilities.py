
import numpy as np
import shutil 


#BARRIER_LENGTH = 4.06542 
BARRIER_LENGTH = 4.4
#BARRIER_WIDTH  = 0.8107
BARRIER_WIDTH  = 1.0

def CreateCustomMapWorld(filename, bounds, obstacles):
	with open(filename + '.world', 'w') as f: 	
		# the constant part
		f.write('<sdf version=\'1.4\'>\n')
		f.write('  <world name=\'default\'>\n')
		f.write('    <light name=\'sun\' type=\'directional\'>\n')
		f.write('      <cast_shadows>1</cast_shadows>\n')
		f.write('      <pose>0 0 10 0 -0 0</pose>\n')
		f.write('      <diffuse>0.8 0.8 0.8 1</diffuse>\n')
		f.write('      <specular>0.2 0.2 0.2 1</specular>\n')
		f.write('      <attenuation>\n')
		f.write('        <range>1000</range>\n')
		f.write('        <constant>0.9</constant>\n')
		f.write('        <linear>0.01</linear>\n')
		f.write('        <quadratic>0.001</quadratic>\n')
		f.write('      </attenuation>\n')
		f.write('      <direction>-0.5 0.1 -0.9</direction>\n')
		f.write('    </light>\n')
		f.write('    <model name=\'ground_plane\'>\n')
		f.write('      <static>1</static>\n')
		f.write('      <link name=\'link\'>\n')
		f.write('        <collision name=\'collision\'>\n')
		f.write('          <geometry>\n')
		f.write('            <plane>\n')
		f.write('              <normal>0 0 1</normal>\n')
		f.write('              <size>%f %f</size>\n' %(bounds[2], bounds[3]))
		f.write('            </plane>\n')
		f.write('          </geometry>\n')
		f.write('          <surface>\n')
		f.write('            <friction>\n')
		f.write('              <ode>\n')
		f.write('                <mu>100</mu>\n')
		f.write('                <mu2>50</mu2>\n')
		f.write('              </ode>\n')
		f.write('            </friction>\n')
		f.write('            <bounce/>\n')
		f.write('            <contact>\n')
		f.write('              <ode/>\n')
		f.write('            </contact>\n')
		f.write('          </surface>\n')
		f.write('          <max_contacts>10</max_contacts>\n')
		f.write('        </collision>\n')
		f.write('        <visual name=\'visual\'>\n')
		f.write('          <cast_shadows>0</cast_shadows>\n')
		f.write('          <geometry>\n')
		f.write('            <plane>\n')
		f.write('              <normal>0 0 1</normal>\n')
		f.write('              <size>%f %f</size>\n' %(bounds[2], bounds[3]))
		f.write('            </plane>\n')
		f.write('          </geometry>\n')
		f.write('          <material>\n')
		f.write('            <script>\n')
		f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
		f.write('              <name>Gazebo/Grey</name>\n')
		f.write('            </script>\n')
		f.write('          </material>\n')
		f.write('        </visual>\n')
		f.write('        <velocity_decay>\n')
		f.write('          <linear>0</linear>\n')
		f.write('          <angular>0</angular>\n')
		f.write('        </velocity_decay>\n')
		f.write('        <self_collide>0</self_collide>\n')
		f.write('        <kinematic>0</kinematic>\n')
		f.write('        <gravity>1</gravity>\n')
		f.write('      </link>\n')
		f.write('    </model>\n')
		f.write('    <physics type=\'ode\'>\n')
		f.write('      <max_step_size>0.01</max_step_size>\n')
		f.write('      <real_time_factor>1</real_time_factor>\n')
		f.write('      <real_time_update_rate>100</real_time_update_rate>\n')
		f.write('      <gravity>0 0 -9.8</gravity>\n')
		f.write('    </physics>\n')
		f.write('    <scene>\n')
		f.write('      <ambient>0.4 0.4 0.4 1</ambient>\n')
		f.write('      <background>0.7 0.7 0.7 1</background>\n')
		f.write('      <shadows>1</shadows>\n')
		f.write('    </scene>\n')
		f.write('    <spherical_coordinates>\n')
		f.write('      <surface_model>EARTH_WGS84</surface_model>\n')
		f.write('      <latitude_deg>0</latitude_deg>\n')
		f.write('      <longitude_deg>0</longitude_deg>\n')
		f.write('      <elevation>0</elevation>\n')
		f.write('      <heading_deg>0</heading_deg>\n')
		f.write('    </spherical_coordinates>\n')

		idx = 0
		# create the sides of the warehouse
		'''
		AddBarrier(f, bounds[0], bounds[1]-BARRIER_WIDTH/2.0, 0.0, bounds[2]-bounds[0], idx)
		idx += 1
		AddBarrier(f, bounds[0], bounds[3]+BARRIER_WIDTH/2.0, 0.0, bounds[2]-bounds[0], idx)
		idx += 1
		AddBarrier(f, bounds[0]-BARRIER_WIDTH/2.0, bounds[1], np.pi/2.0, bounds[3]-bounds[1], idx)
		idx += 1
		AddBarrier(f, bounds[2]+BARRIER_WIDTH/2.0, bounds[1], np.pi/2.0, bounds[3]-bounds[1], idx)
		'''
		Total_X = bounds[0] + BARRIER_LENGTH/2.0
		while(Total_X + BARRIER_LENGTH/4.0 <= bounds[2]):
			#AddBarrier(f, Total_X, bounds[1]-BARRIER_WIDTH/2.0, 0.0, BARRIER_LENGTH, idx)
			AddBarrier(f, Total_X, bounds[1]-BARRIER_WIDTH, 0.0, BARRIER_LENGTH, idx)
			Total_X += BARRIER_LENGTH
			idx += 1
		Total_X = bounds[0] + BARRIER_LENGTH/2.0
		while(Total_X + BARRIER_LENGTH/4.0<= bounds[2]):
			#AddBarrier(f, Total_X, bounds[3]+BARRIER_WIDTH/2.0, 0.0, BARRIER_LENGTH, idx)
			AddBarrier(f, Total_X, bounds[3]+BARRIER_WIDTH, 0.0, BARRIER_LENGTH, idx)
			Total_X += BARRIER_LENGTH
			idx += 1
		Total_Y = bounds[1] + BARRIER_LENGTH/2.0
		while(Total_Y + BARRIER_LENGTH/4.0<= bounds[3]):
			#AddBarrier(f, bounds[0]-BARRIER_WIDTH/2.0, Total_Y, np.pi/2.0, BARRIER_LENGTH, idx)
			AddBarrier(f, bounds[0]-BARRIER_WIDTH, Total_Y, np.pi/2.0, BARRIER_LENGTH, idx)
			Total_Y += BARRIER_LENGTH
			idx += 1
		Total_Y = bounds[1] + BARRIER_LENGTH/2.0
		while(Total_Y + BARRIER_LENGTH/4.0 <= bounds[3]):
			#AddBarrier(f, bounds[2]+BARRIER_WIDTH/2.0, Total_Y, np.pi/2.0, BARRIER_LENGTH, idx)
			AddBarrier(f, bounds[2]+BARRIER_WIDTH, Total_Y, np.pi/2.0, BARRIER_LENGTH, idx)
			Total_Y += BARRIER_LENGTH
			idx += 1
		
		idx = 0
		# create the sides of the shelves
		'''
		for obs in obstacles:
			if((obs[2]-obs[0]) > (obs[3]-obs[1])):
				Total_X = obs[0] + SHELF_LENGTH/2.0
				while(Total_X + SHELF_LENGTH <= obs[2]):
					AddShelf(f, Total_X, obs[1] + (obs[3]-obs[1])/2.0 -SHELF_WIDTH/2.0, 0.0, idx)
					Total_X += SHELF_LENGTH
					idx += 1
			else:
				Total_X = obs[1] + SHELF_LENGTH/2.0
				while(Total_X + SHELF_LENGTH <= obs[3]):
					AddShelf(f, obs[0] + (obs[2]-obs[0])/2.0 -SHELF_WIDTH/2.0, Total_X, np.pi/2.0, idx)
					Total_X += SHELF_LENGTH
					idx += 1
				
		for obs in obstacles:
			if((obs[2]-obs[0]) > (obs[3]-obs[1])):
				AddShelf(f, (obs[2]+obs[0])/2.0, (obs[3]+obs[1])/2.0, 0.0, idx)
			else:
				AddShelf(f, (obs[2]+obs[0])/2.0, (obs[3]+obs[1])/2.0, np.pi/2.0, idx)
			idx += 1
		'''
		for obs in obstacles:
			if((obs[2]-obs[0]) > (obs[3]-obs[1])):
				AddLongShelf(f, (obs[2]+obs[0])/2.0, obs[3], 0.0, \
							 (obs[2]-obs[0]), (obs[3]-obs[1])/1.0, idx) #obs[1]+(obs[3]-obs[1])/2.0
				'''
				AddLongShelf(f, (obs[2]+obs[0])/2.0, obs[1]+(obs[3]-obs[1])/4.0-1, 0.0, \
							 (obs[2]-obs[0])-0.1, (obs[3]-obs[1])/2.0-0.1, idx)
				idx += 1
				AddLongShelf(f, (obs[2]+obs[0])/2.0, obs[1]+(obs[3]-obs[1])/4.0+1, np.pi, \
							 (obs[2]-obs[0])-0.1, (obs[3]-obs[1])/2.0-0.1, idx)
				'''
			else:
				AddLongShelf(f, obs[0], (obs[3]+obs[1])/2.0, np.pi/2.0, \
							 (obs[3]-obs[1]), (obs[2]-obs[0])/1.0, idx) #obs[0]+(obs[2]-obs[0])/2.0, (obs[3]+obs[1])/2.0
				'''
				AddLongShelf(f, obs[0]+(obs[2]-obs[0])/4.0-1, (obs[3]+obs[1])/2.0, np.pi/2.0, \
							 (obs[3]-obs[1])-0.1, (obs[2]-obs[0])/2.0-0.1, idx)
				idx += 1
				AddLongShelf(f, obs[0]+(obs[2]-obs[0])/4.0+1, (obs[3]+obs[1])/2.0, -np.pi/2.0, \
							 (obs[3]-obs[1])-0.1, (obs[2]-obs[0])/2.0-0.1, idx)
				'''
			idx += 1
		
		#now, the state
		f.write('    <state world_name=\'default\'>\n')
		f.write('      <sim_time>0 615000000</sim_time>\n')
		f.write('      <real_time>0 820938930</real_time>\n')
		f.write('      <wall_time>1575997061 523548899</wall_time>\n')
		f.write('      <iterations>62</iterations>\n')
		f.write('      <model name=\'ground_plane\'>\n')
		f.write('        <pose frame=''>0 0 0 0 -0 0</pose>\n')
		f.write('        <scale>1 1 1</scale>\n')
		f.write('        <link name=\'link\'>\n')
		f.write('          <pose frame=''>0 0 0 0 -0 0</pose>\n')
		f.write('          <velocity>0 0 0 0 -0 0</velocity>\n')
		f.write('          <acceleration>0 0 0 0 -0 0</acceleration>\n')
		f.write('          <wrench>0 0 0 0 -0 0</wrench>\n')
		f.write('        </link>\n')
		f.write('      </model>\n')
		
		idx = 0
		'''
		AddBarierState(f, bounds[0], bounds[1]-BARRIER_WIDTH/2.0, 0.0, idx)
		idx += 1
		AddBarierState(f, bounds[0], bounds[3]+BARRIER_WIDTH/2.0, 0.0, idx)
		idx += 1
		AddBarierState(f, bounds[0]-BARRIER_WIDTH/2.0, bounds[1], np.pi/2.0, idx)
		idx += 1
		AddBarierState(f, bounds[2]+BARRIER_WIDTH/2.0, bounds[1], np.pi/2.0, idx)
		'''
		Total_X = bounds[0] + BARRIER_LENGTH/2.0
		while(Total_X + BARRIER_LENGTH/4.0 <= bounds[2]):
			#AddBarierState(f, Total_X, bounds[1]-BARRIER_WIDTH/2.0, 0.0, idx)
			AddBarierState(f, Total_X, bounds[1]-BARRIER_WIDTH, 0.0, idx)
			Total_X += BARRIER_LENGTH
			idx += 1
		Total_X = bounds[0] + BARRIER_LENGTH/2.0
		while(Total_X + BARRIER_LENGTH/4.0 <= bounds[2]):
			#AddBarierState(f, Total_X, bounds[3]+BARRIER_WIDTH/2.0, 0.0, idx)
			AddBarierState(f, Total_X, bounds[3]+BARRIER_WIDTH, 0.0, idx)
			Total_X += BARRIER_LENGTH
			idx += 1
		Total_Y = bounds[1] + BARRIER_LENGTH/2.0
		while(Total_Y + BARRIER_LENGTH/4.0 <= bounds[3]):
			#AddBarierState(f, bounds[0]-BARRIER_WIDTH/2.0, Total_Y, np.pi/2.0, idx)
			AddBarierState(f, bounds[0]-BARRIER_WIDTH, Total_Y, np.pi/2.0, idx)
			Total_Y += BARRIER_LENGTH
			idx += 1
		Total_Y = bounds[1] + BARRIER_LENGTH/2.0
		while(Total_Y + BARRIER_LENGTH/4.0 <= bounds[3]):
			#AddBarierState(f, bounds[2]+BARRIER_WIDTH/2.0, Total_Y, np.pi/2.0, idx)
			AddBarierState(f, bounds[2]+BARRIER_WIDTH, Total_Y, np.pi/2.0, idx)
			Total_Y += BARRIER_LENGTH
			idx += 1
		
		idx = 0
		'''
		for obs in obstacles:
			if((obs[2]-obs[0]) > (obs[3]-obs[1])):
				Total_X = obs[0] + SHELF_LENGTH/2.0
				while(Total_X + SHELF_LENGTH <= obs[2]):
					AddShelfState(f, Total_X, obs[1] + (obs[3]-obs[1])/2.0 -SHELF_WIDTH/2.0, 0.0, idx)
					Total_X += SHELF_LENGTH
					idx += 1
			else:
				Total_X = obs[1] + SHELF_LENGTH/2.0
				while(Total_X + SHELF_LENGTH <= obs[3]):
					AddShelfState(f, obs[0] + (obs[2]-obs[0])/2.0 -SHELF_WIDTH/2.0, Total_X, np.pi/2.0, idx)
					Total_X += SHELF_LENGTH
					idx += 1
		'''
		for obs in obstacles:
			if((obs[2]-obs[0]) > (obs[3]-obs[1])):
				AddShelfState(f, (obs[2]+obs[0])/2.0, obs[3], 0.0, idx, scale=1.0) #obs[1]+(obs[3]-obs[1])/2.0
				'''
				AddShelfState(f, (obs[2]+obs[0])/2.0-0.1, obs[1]+(obs[3]-obs[1])/4.0-1, 0.0, idx, scale=1.0)
				idx += 1
				AddShelfState(f, (obs[2]+obs[0])/2.0-0.1, obs[1]+(obs[3]-obs[1])/4.0-1, 0.0, idx, scale=1.0)
				'''
			else:
				AddShelfState(f, obs[0], (obs[1]+obs[3])/2.0, np.pi/2.0, idx, scale=1.0) #obs[0]+(obs[2]-obs[0])/2.0, (obs[3]+obs[1])/2.0
				'''
				AddShelfState(f, obs[0]+(obs[2]-obs[0])/4.0-1, (obs[3]+obs[1])/2.0-0.1, np.pi/2.0, idx, scale=1.0)
				idx += 1
				AddShelfState(f, obs[0]+(obs[2]-obs[0])/4.0-1, (obs[3]+obs[1])/2.0-0.1, np.pi/2.0, idx, scale=1.0)
				'''
			idx += 1


		f.write('      <light name=\'sun\'>\n')
		f.write('        <pose frame=\'\'>0 0 10 0 -0 0</pose>\n')
		f.write('      </light>\n')
		f.write('    </state>\n')

		
		f.write('    <gui fullscreen=\'0\'>\n')
		f.write('      <camera name=\'user_camera\'>\n')
		f.write('        <pose>6.70261 2.41332 41.2791 0 1.4098 -3.1231</pose>\n')
		f.write('        <view_controller>orbit</view_controller>\n')
		f.write('      </camera>\n')
		f.write('    </gui>\n')
		f.write('  </world>\n')
		f.write('</sdf>\n')
	
	dest_folder = '../simulation/jackal_nav/src/multi_jackal_tutorials/worlds/'
	#dest_folder = '../simulation/jackal_nav/src/jackal_simulator/jackal_gazebo/worlds/'
	dest = shutil.copyfile(filename + '.world', dest_folder + 'jackal_race.world') 
	print('Copied map to location ' + dest_folder)
	#print('Map Not copied to Gazebo. Fix Simulation ')
		
def AddBarrier(f, x, y, yaw, length, idx):
	f.write('    <model name=\'jersey_barrier_%d\'>\n' %(idx))
	f.write('      <static>1</static>\n')
	f.write('      <link name=\'link\'>\n')
	f.write('        <visual name=\'visual\'>\n')
	f.write('          <geometry>\n')
	f.write('            <mesh>\n')
	f.write('              <uri>model://jersey_barrier/meshes/jersey_barrier.dae</uri>\n')
	f.write('              <scale>1 1 1</scale>\n')
	f.write('            </mesh>\n')
	f.write('          </geometry>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'upright\'>\n')
	f.write('          <pose frame=''>0 0 0.5715 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f 0.3063 1.143</size>\n' %(length))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <collision name=\'base\'>\n')
	f.write('          <pose frame=''>0 0 0.032258 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f 0.8107 0.064516</size>\n' %(length))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <collision name=\'base2\'>\n')
	f.write('          <pose frame=''>0 0 0.1 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f 0.65 0.1</size>\n' %(length))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <collision name=\'base3\'>\n')
	f.write('          <pose frame=''>0 0 0.2 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f 0.5 0.1</size>\n' %(length))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <collision name=\'left-angle\'>\n')
	f.write('          <pose frame=''>0 -0.224 0.2401 0.9 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f 0.5 0.064516</size>\n' %(length))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <collision name=\'right-angle\'>\n')
	f.write('          <pose frame=''>0 0.224 0.2401 -0.9 0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f 0.5 0.064516</size>\n' %(length))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <self_collide>0</self_collide>\n')
	f.write('        <kinematic>0</kinematic>\n')
	f.write('        <gravity>1</gravity>\n')
	f.write('      </link>\n')
	f.write('      <pose frame=''>%f %f 0 0 -0 %f</pose>\n' %(x,y,yaw))
	f.write('    </model>\n')
		

def AddBarierState(f, x, y, yaw, idx):
	f.write('      <model name=\'jersey_barrier_%d\'>\n' %(idx) )
	f.write('        <pose frame=''>%f %f 0 0 -0 %f</pose>\n' %(x,y,yaw))
	f.write('        <scale>1 1 1</scale>\n')
	f.write('        <link name=\'link\'>\n')
	f.write('          <pose frame=''>%f %f 0 0 -0 %f</pose>\n' %(x,y,yaw))
	f.write('          <velocity>0 0 0 0 -0 0</velocity>\n')
	f.write('          <acceleration>0 0 0 0 -0 0</acceleration>\n')
	f.write('          <wrench>0 0 0 0 -0 0</wrench>\n')
	f.write('        </link>\n')
	f.write('      </model>\n')


def AddShelf(f, x, y, yaw, idx):
	f.write('    <model name=\'bookshelf_%d\'>\n' %(idx))
	f.write('      <static>1</static>\n')
	f.write('      <link name=\'link\'>\n')
	f.write('        <inertial>\n')
	f.write('          <mass>1</mass>\n')
	f.write('        </inertial>\n')
	f.write('        <collision name=\'back\'>\n')
	f.write('          <pose frame=''>0 0.005 0.6 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.9 0.01 1.2</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual1\'>\n')
	f.write('          <pose frame=''>0 0.005 0.6 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.9 0.01 1.2</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'left_side\'>\n')
	f.write('          <pose frame=''>0.45 -0.195 0.6 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.02 0.4 1.2</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual2\'>\n')
	f.write('          <pose frame=''>0.45 -0.195 0.6 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.02 0.4 1.2</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'right_side\'>\n')
	f.write('          <pose frame=''>-0.45 -0.195 0.6 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.02 0.4 1.2</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual3\'>\n')
	f.write('          <pose frame=''>-0.45 -0.195 0.6 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.02 0.4 1.2</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'bottom\'>\n')
	f.write('          <pose frame=''>0 -0.195 0.03 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.88 0.4 0.06</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual4\'>\n')
	f.write('          <pose frame=''>0 -0.195 0.03 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.88 0.4 0.06</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'top\'>\n')
	f.write('          <pose frame=''>0 -0.195 1.19 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.88 0.4 0.02</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual5\'>\n')
	f.write('          <pose frame=''>0 -0.195 1.19 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.88 0.4 0.02</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'low_shelf\'>\n')
	f.write('          <pose frame=''>0 -0.195 0.43 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.88 0.4 0.02</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual6\'>\n')
	f.write('          <pose frame=''>0 -0.195 0.43 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.88 0.4 0.02</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'high_shelf\'>\n')
	f.write('          <pose frame=''>0 -0.195 0.8 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.88 0.4 0.02</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual7\'>\n')
	f.write('          <pose frame=''>0 -0.195 0.8 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.88 0.4 0.02</size>\n')
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <self_collide>0</self_collide>\n')
	f.write('        <kinematic>0</kinematic>\n')
	f.write('        <gravity>1</gravity>\n')
	f.write('      </link>\n')
	f.write('      <pose frame=\'\'>%f %f 0 0 -0 %f</pose>\n' %(x,y,yaw))
	f.write('    </model>\n')

def AddShelfState(f, x, y, yaw, idx, scale=1.0):	
	f.write('          <model name=\'bookshelf_%d\'>\n' %(idx))
	f.write('            <pose frame=\'\'>%f %f 0 0 -0 %f</pose>\n' %(x, y, yaw))
	f.write('            <scale>%f %f %f</scale>\n' %(scale, scale, scale))
	f.write('            <link name=\'link\'>\n')
	f.write('              <pose frame=\'\'>%f %f 0 0 -0 %f</pose>\n' %(x, y, yaw)) 
	f.write('              <velocity>0 0 0 0 -0 0</velocity>\n')
	f.write('              <acceleration>0 0 0 0 -0 0</acceleration>\n')
	f.write('              <wrench>0 0 0 0 -0 0</wrench>\n')
	f.write('            </link>\n')
	f.write('          </model>\n')

	
def AddLongShelf(f, x, y, yaw, length, width, idx):
	f.write('    <model name=\'bookshelf_%d\'>\n' %(idx))
	f.write('      <static>1</static>\n')
	f.write('      <link name=\'link\'>\n')
	f.write('        <inertial>\n')
	f.write('          <mass>1</mass>\n')
	f.write('        </inertial>\n')
	f.write('        <collision name=\'back\'>\n')
	f.write('          <pose frame=''>0 0.005 0.6 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f 0.01 1.2</size>\n' %(length))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual1\'>\n')
	f.write('          <pose frame=''>0 0.005 0.6 0 -0 0</pose>\n')
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f 0.01 1.2</size>\n' %(length))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'left_side\'>\n')
	f.write('          <pose frame=''>%f %f 0.6 0 -0 0</pose>\n' %(length/2.0,-(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.02 %f 1.2</size>\n' %(width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual2\'>\n')
	f.write('          <pose frame=''>%f %f 0.6 0 -0 0</pose>\n' %(length/2.0, -(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.02 %f 1.2</size>\n' %(width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'right_side\'>\n')
	f.write('          <pose frame=''>%f %f 0.6 0 -0 0</pose>\n' %(-length/2.0, -(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.02 %f 1.2</size>\n' %(width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual3\'>\n')
	f.write('          <pose frame=''>%f %f 0.6 0 -0 0</pose>\n' %(-length/2.0, -(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>0.02 %f 1.2</size>\n' %(width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'bottom\'>\n')
	f.write('          <pose frame=''>0 %f 0.03 0 -0 0</pose>\n' % (-(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f %f 0.06</size>\n' %(length-0.02, width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual4\'>\n')
	f.write('          <pose frame=''>0 %f 0.03 0 -0 0</pose>\n' %(-(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f %f 0.06</size>\n' %(length-0.02, width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'top\'>\n')
	f.write('          <pose frame=''>0 %f 1.19 0 -0 0</pose>\n' %(-(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f %f 0.02</size>\n' %(length-0.02, width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual5\'>\n')
	f.write('          <pose frame=''>0 %f 1.19 0 -0 0</pose>\n' %(-(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f %f 0.02</size>\n' %(length-0.02, width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'low_shelf\'>\n')
	f.write('          <pose frame=''>0 %f 0.43 0 -0 0</pose>\n' %(-(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f %f 0.02</size>\n' %(length-0.02, width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual6\'>\n')
	f.write('          <pose frame=''>0 %f 0.43 0 -0 0</pose>\n' %(-(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f %f 0.02</size>\n' %(length-0.02, width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <collision name=\'high_shelf\'>\n')
	f.write('          <pose frame=''>0 %f 0.8 0 -0 0</pose>\n' %(-(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f %f 0.02</size>\n' %(length-0.02, width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <max_contacts>10</max_contacts>\n')
	f.write('          <surface>\n')
	f.write('            <contact>\n')
	f.write('              <ode/>\n')
	f.write('            </contact>\n')
	f.write('            <bounce/>\n')
	f.write('            <friction>\n')
	f.write('              <torsional>\n')
	f.write('                <ode/>\n')
	f.write('              </torsional>\n')
	f.write('              <ode/>\n')
	f.write('            </friction>\n')
	f.write('          </surface>\n')
	f.write('        </collision>\n')
	f.write('        <visual name=\'visual7\'>\n')
	f.write('          <pose frame=''>0 %f 0.8 0 -0 0</pose>\n' %(-(width-0.01)/2.0))
	f.write('          <geometry>\n')
	f.write('            <box>\n')
	f.write('              <size>%f %f 0.02</size>\n' %(length-0.02, width))
	f.write('            </box>\n')
	f.write('          </geometry>\n')
	f.write('          <material>\n')
	f.write('            <script>\n')
	f.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
	f.write('              <name>Gazebo/Wood</name>\n')
	f.write('            </script>\n')
	f.write('          </material>\n')
	f.write('        </visual>\n')
	f.write('        <self_collide>0</self_collide>\n')
	f.write('        <kinematic>0</kinematic>\n')
	f.write('        <gravity>1</gravity>\n')
	f.write('      </link>\n')
	f.write('      <pose frame=\'\'>%f %f 0 0 -0 %f</pose>\n' %(x,y,yaw))
	f.write('    </model>\n')
	

	
def CreateJackals(filename, IC=[[0.0,0.0,0.0]]):
	
	N = len(IC)
	with open(filename + '.launch', 'w') as f: 	
		f.write('<?xml version="1.0"?>\n')
		f.write('\n')
		f.write('<!-- Launches Jackal Gazebo simulation for warehouse automation in a day. -->\n')
		f.write('\n')
		f.write('<launch>\n')
		f.write('  <arg name="gui"        default="true"/>\n')
		f.write('  <arg name="rviz"       default="false"/>\n')
		for i in range(N):
			f.write('  <arg name="ns%d"        default="jackal%d"/>\n' %(i,i))
		for i in range(N):
			f.write('  <arg name="config%d"    default="front_laser"/>\n' %(i))
			f.write('  <arg name="config%d_id" default="%d"/>\n' %(i,i))
		f.write('  <arg name="world"      default="jackal_race.world"/>\n')
		f.write('  \n')
		f.write('  <!-- Start Gazebo with an empty world. -->\n')
		f.write('  <include file="$(find gazebo_ros)/launch/empty_world.launch">\n')
		f.write('    <arg name="use_sim_time" value="true"/>\n')
		f.write('    <arg name="gui"          value="$(arg gui)"/>	\n')
		f.write('	<!--arg name="world_name"   value="$(find jackal_gazebo)/worlds/jackal_race.world"/-->  \n')
		f.write('    <arg name="world_name"   value="$(find multi_jackal_tutorials)/worlds/$(arg world)"/>\n')
		f.write('  </include>\n')
		f.write('  \n')
		f.write('  <!-- Spawn the robots. -->\n')
		for i in range(N):
			f.write('  <include file="$(find multi_jackal_base)/launch/jackal_base.launch">\n')
			f.write('    <arg name="ns"            value="$(arg ns%d)"/>\n' %(i))
			f.write('    <arg name="config"        value="$(arg config%d)"/>\n' %(i))
			f.write('    <arg name="config_id"     value="$(arg config%d_id)"/>\n' %(i))
			f.write('    <arg name="use_move_base" value="true"/>\n')
			f.write('    <arg name="use_global_tf" value="false"/>\n')
			f.write('    <arg name="use_global_ekf" value="true"/>\n')
			f.write('    <arg name="x"             value="%f"/>\n' %(IC[i][0]))
			f.write('    <arg name="y"             value="%f"/>\n' %(IC[i][1]))
			f.write('    <arg name="yaw"           value="%f"/>\n' %(IC[i][2])) #to match axes of gazebo
			f.write('  </include>\n')
		f.write('  \n')
		f.write('  <!-- View in RVIZ. -->\n')
		f.write('  <group if="$(arg rviz)">\n')
		f.write('    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find multi_jackal_tutorials)/rviz/three_jackal.rviz" >\n')
		f.write('      <remap from="/move_base_simple/goal" to="/$(arg ns2)/move_base_simple/goal"/>\n')
		f.write('    </node>\n')
		f.write('  </group>\n')
		f.write('</launch>\n')

	dest_folder = '../simulation/jackal_nav/src/multi_jackal_tutorials/launch/'
	dest = shutil.copyfile(filename + '.launch', dest_folder + 'jackal_AW.launch') 
	print('Copied Jackal configuration to location ' + dest_folder)
	#print('Jackal configuration was not copied. Fix Simulation installation')
	
	
if __name__ == '__main__':
	filename = 'warehouse'
	bounds = np.array([  2.90614028,   4.305393  ,  74.26802929, 136.588593  ])
	obstacles = []
	obstacles.append([10., 10., 20., 12.])	
	obstacles.append([50., 50., 52., 80.])
	
	CreateCustomMapWorld(filename, bounds, obstacles)
		
		
		